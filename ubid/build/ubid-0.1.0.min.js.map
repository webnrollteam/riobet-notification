{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/async/lib/async.js","node_modules/browserify/node_modules/process/browser.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","index.js"],"names":[],"mappings":"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","file":"ubid-0.1.0.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (process){\n/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n\n}).call(this,require('_process'))","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","(function (global){\n\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","'use strict';\n\nvar async = require( 'async' );\nvar uuid = require( 'uuid' );\n\nmodule.exports = {};\n\nvar STORAGE_KEY = 'ubid:signaturedata';\n\nmodule.exports.get = function( callback, storageLayer ) {\n\n    var ids = null;\n    var storageSupported = false;\n    \n    async.series( [\n        // check for the item in storage\n        function( next ) {\n            if ( !storageLayer || !storageLayer.getItem ) {\n                next();\n                return;\n            }\n            \n            storageLayer.getItem( STORAGE_KEY, function( error, jsonIDs ) {\n                if ( error ) {\n                    next( error );\n                    return;\n                }\n\n                try {\n                    ids = JSON.parse( jsonIDs );\n                }\n                catch( ex ) {\n                    ids = null;\n                }                \n                \n                storageSupported = true;\n                next();\n            } );\n        },\n        \n        // generate ids if they were not read out of storage\n        function( next ) {\n            if ( ids ) {\n                next();\n                return;\n            }\n            \n            getSignatureData( function( error, _ids ) {\n                ids = _ids;\n                next( error );\n            } );\n        },\n        \n        // store ids into storage\n        function( next ) {\n            if ( !storageSupported ) {\n                next();\n                return;\n            }\n            \n            storageLayer.setItem( STORAGE_KEY, JSON.stringify( ids ), next );\n        }\n        \n    ], function( error ) {\n\n        if ( ids ) {\n            ids.storageSupported = storageSupported;\n        }\n        \n        callback( error, ids );\n    } );\n};\n\nfunction getSignatureData( callback ) {\n    var signatureData = {};\n    \n    async.parallel( [\n        getRandomID.bind( null, signatureData ),\n        getBrowserSignature.bind( null, signatureData ),\n        getCanvasSignature.bind( null, signatureData )\n    ], function( error ) {\n        callback( error, signatureData );\n    } );\n\n}\n\nfunction getRandomID( signatureData, callback ) {\n    signatureData.random = {\n        signature: uuid.v4()\n    };\n\n    callback();\n}\n\nfunction getBrowserSignature( signatureData, callback ) {\n    var idString = navigator.userAgent + navigator.language;\n    for ( var key in navigator.plugins ) {\n        var plugin = navigator.plugins[ key ];\n        idString += plugin.name + plugin.filename + plugin.description;\n    }\n\n    signatureData.browser = {\n        signature: SHA256( idString )\n    };\n    \n    callback();\n}\n\nvar CANVAS_TEXT = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz 1234567890 !@#$%^&*()_-+=\";\nvar CANVAS_FONT_SIZE = 16;\nvar CANVAS_FONT_FACE = 'Arial';\nfunction getCanvasSignature( signatureData, callback ) {\n    // based on:\n    // https://www.browserleaks.com/canvas#how-does-it-work\n    // https://github.com/kmowery/canvas-fingerprinting\n    \n    signatureData.canvas = {\n        signature: null\n    };\n    \n    var canvas = document.createElement( 'canvas' );\n    if ( !canvas || !canvas.getContext ) {\n        callback();\n        return;\n    }\n\n    var width = CANVAS_FONT_SIZE * ( CANVAS_TEXT.length + 2 );\n    var height = CANVAS_FONT_SIZE * 2;\n    canvas.setAttribute( 'width', width );\n    canvas.setAttribute( 'height', height );\n\n    var ctx = canvas.getContext( '2d' );\n    if ( !ctx || typeof( ctx.fillText ) !== 'function' ) {\n        callback();\n        return;\n    }\n\n    ctx.font = CANVAS_FONT_SIZE + 'px \\'' + CANVAS_FONT_FACE + '\\'';\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n\n    ctx.fillStyle = \"#f60\";\n    ctx.fillRect( ( ( 3 * width ) / 8 ), 0, width / 4, height );\n\n    ctx.fillStyle = \"#069\";\n    ctx.fillText( CANVAS_TEXT, width / 2, height / 2 );\n    ctx.fillStyle = \"rgba(102, 204, 0, 0.7)\";\n    ctx.fillText( CANVAS_TEXT, ( width / 2 ) + 2, ( height / 2 ) + 2 );\n\n    var base64png = canvas.toDataURL( 'image/png' );\n    signatureData.canvas.signature = SHA256( base64png );\n    callback();\n}\n\n\n/**\n*\n*  Secure Hash Algorithm (SHA256)\n*  http://www.webtoolkit.info/\n*\n*  Original code by Angel Marin, Paul Johnston.\n*\n**/\n\nvar HEX_TAB = \"0123456789abcdef\";\n\nfunction SHA256( data ) {\n\n    var chrsz   = 8;\n\n    function safe_add (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n\n    function s( X, n ) { return ( X >>> n ) | (X << (32 - n)); }\n    function r( X, n ) { return ( X >>> n ); }\n    function ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\n    function maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\n    function sigma0256(x) { return (s(x, 2) ^ s(x, 13) ^ s(x, 22)); }\n    function sigma1256(x) { return (s(x, 6) ^ s(x, 11) ^ s(x, 25)); }\n    function gamma0256(x) { return (s(x, 7) ^ s(x, 18) ^ r(x, 3)); }\n    function gamma1256(x) { return (s(x, 17) ^ s(x, 19) ^ r(x, 10)); }\n\n    function core_sha256 (m, l) {\n        var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n        var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n\n        m[l >> 5] |= 0x80 << (24 - l % 32);\n        m[((l + 64 >> 9) << 4) + 15] = l;\n\n        for ( i = 0; i<m.length; i+=16 ) {\n            a = HASH[0];\n            b = HASH[1];\n            c = HASH[2];\n            d = HASH[3];\n            e = HASH[4];\n            f = HASH[5];\n            g = HASH[6];\n            h = HASH[7];\n\n            for ( j = 0; j<64; j++) {\n                if (j < 16) W[j] = m[j + i];\n                else W[j] = safe_add(safe_add(safe_add(gamma1256(W[j - 2]), W[j - 7]), gamma0256(W[j - 15])), W[j - 16]);\n\n                T1 = safe_add(safe_add(safe_add(safe_add(h, sigma1256(e)), ch(e, f, g)), K[j]), W[j]);\n                T2 = safe_add(sigma0256(a), maj(a, b, c));\n\n                h = g;\n                g = f;\n                f = e;\n                e = safe_add(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add(T1, T2);\n            }\n\n            HASH[0] = safe_add(a, HASH[0]);\n            HASH[1] = safe_add(b, HASH[1]);\n            HASH[2] = safe_add(c, HASH[2]);\n            HASH[3] = safe_add(d, HASH[3]);\n            HASH[4] = safe_add(e, HASH[4]);\n            HASH[5] = safe_add(f, HASH[5]);\n            HASH[6] = safe_add(g, HASH[6]);\n            HASH[7] = safe_add(h, HASH[7]);\n        }\n        return HASH;\n    }\n\n    function str2binb (str) {\n        var bin = [];\n        var mask = (1 << chrsz) - 1;\n        for(var i = 0; i < str.length * chrsz; i += chrsz) {\n            bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\n        }\n        return bin;\n    }\n\n    function utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    }\n\n    function binb2hex (binarray) {\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++) {\n            str += HEX_TAB.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n                HEX_TAB.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n        }\n        return str;\n    }\n\n    var utf = utf8Encode( data );\n    return binb2hex(core_sha256(str2binb(utf), utf.length * chrsz));\n}\n"],"sourceRoot":"/source/"}